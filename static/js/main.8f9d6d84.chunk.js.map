{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BurgerControls/BurgerControl/BurgerControl.module.css","App.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Navigation/Header/Header.module.css","components/UI/Button/Button.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/Burger.module.css","components/Modal/Modal.module.css","components/Backdrop/Backdrop.module.css","components/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Logo/Logo.module.css","store/ducks/user/actions.js","reportWebVitals.js","store/ducks/user/types.js","store/ducks/user/reducers.js","store/ducks/user/operations.js","store/ducks/user/index.js","store/ducks/burger/types.js","store/ducks/burger/reducers.js","store/ducks/burger/operations.js","store/ducks/burger/actions.js","store/ducks/burger/index.js","utils/endpoints.js","containers/LoginPage/LoginPage.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BurgerControls/BurgerControl/BurgerControl.js","utils/controls.js","components/Burger/BurgerControls/BurgerControls.js","components/Backdrop/Backdrop.js","components/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","utils/ingredientPrices.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","hooks/useForm.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","containers/UserProfilePage/UserProfilePage.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Navigation.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/Header/Header.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","index.js","store/index.js"],"names":["module","exports","logoutTimer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isLoggedIn","idToken","expiresIn","userAuthReducer","combineReducers","userAuth","state","action","type","types","runLogoutTimer","dispatch","expirationTime","remainingTime","currentTime","Date","getTime","calculateTimeToLogout","setTimeout","logout","localStorage","removeItem","clearTimeout","login","getItem","setItem","onLoginSuccess","onLogoutRequest","ingredients","totalPrice","canPurchase","isPurchasing","error","burgerReducer","burger","Object","values","payload","some","value","setIngredients","setTotalPrice","updatePurchase","FIREBASE_SIGN_IN_WITH_PASSWORD","process","FIREBASE_SIGN_UP","FIREBASE_UPDATE_PASSWORD","LoginPage","navigate","useNavigate","useDispatch","emailFieldRef","useRef","passwordFieldRef","useState","isLogin","setIsLogin","isLoading","setIsLoading","onClickSwitchAuthMethod","prevState","AuthMethodButtonText","Button","className","variant","Spinner","as","animation","size","role","aria-hidden","Form","Text","style","display","onClick","Container","Row","Col","xs","lg","onSubmit","event","preventDefault","fetch","method","body","JSON","stringify","email","current","password","returnSecureToken","headers","response","ok","json","Error","data","timeToLogout","userAuthOperations","catch","console","message","Group","controlId","Label","Control","required","ref","placeholder","instance","axios","create","baseURL","BurgerIngredient","ingredient","classes","BreadTop","Seeds1","Seeds2","BreadBottom","Meat","Cheese","Salad","Onion","Bacon","propTypes","PropTypes","string","isRequired","Burger","hasError","ingredientsAll","keys","map","ingredientsKey","Array","Math","max","_","i","reduce","arr","curr","concat","length","classesGlobal","TextCenter","fontWeight","defaultProps","BurgerControl","label","added","removed","disabledNote","BuildControl","More","Less","disabled","BurgerControls","ingredientAdded","ingredientRemoved","onClickOrder","CONTROLS","control","OrderButton","backdrop","clicked","children","show","Backdrop","Modal","modalClose","transform","React","memo","button","btnType","join","orderSummary","purchaseCancelled","purchaseProceed","price","ingredientsItems","listStyleType","paddingLeft","spinner","Loader","withErrorHandler","WrappedComponent","errorConfirmedHandler","setState","this","requestInterceptor","interceptors","request","use","responseInterceptor","eject","props","Component","meat","salad","cheese","onion","bacon","WithErrorHandler","useSelector","burgerState","purchasing","setPurchasing","loading","setLoading","setError","useEffect","get","burgerOperations","errorData","purchaseCancel","key","OrderSummary","queryParams","push","encodeURIComponent","queryString","pathname","search","countUpdated","ingredientsUpdated","newPrice","parseFloat","INGREDIENT_PRICES","toFixed","Number","checkoutSummary","onCheckoutCancelled","onCheckoutSucceed","CheckoutSummary","useForm","initialValue","formData","setFormData","inputChangeHandler","target","name","ContactData","isValidated","setIsValidated","zipCode","country","street","form","noValidate","validated","dateFormatted","toLocaleString","year","month","day","hour","minute","hourCycle","checkValidity","order","orderDate","customer","post","stopPropagation","handleSubmit","onChange","Checkout","setPrice","location","useLocation","query","URLSearchParams","ingredientElements","entries","param","UserProfilePage","userAuthState","enteredNewPassword","replace","pattern","aria-describedby","id","muted","Feedback","navigationItem","link","end","NavigationItem","isActive","active","to","NavigationItems","Navigation","logo","openedSideDrawer","Logo","alt","src","logoImg","toolbar","clickedLogo","Header","ButtonToggler","sideDrawer","opened","closed","SideDrawer","Open","Close","Layout","isVisibleSideDrawer","setIsVisibleSideDrawer","sideDrawerToggleHandler","marginTop","Order","orderIngredients","ingredientName","amount","orderIngredientsOutput","Badge","Card","Body","Title","orders","setOrders","fetchedOrders","orderItem","App","tokenInfo","path","element","store","rootReducer","reducers","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","REDUX_INITIAL_DATA","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f9d6d84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Onion\":\"BurgerIngredient_Onion__1vjxT\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BurgerControl_BuildControl__2dY5M\",\"Label\":\"BurgerControl_Label__2bTIX\",\"Less\":\"BurgerControl_Less__1Zoe8\",\"More\":\"BurgerControl_More__15bc5\",\"OrderButton\":\"BurgerControl_OrderButton__3KnM6\",\"enable\":\"BurgerControl_enable__1LxsX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextCenter\":\"App_TextCenter__1OttC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2PA5r\",\"Logo\":\"Header_Logo__29ViQ\",\"ButtonToggler\":\"Header_ButtonToggler__2irqb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2O1l9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2hakv\",\"load2\":\"Spinner_load2__XNvqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","import types from './types';\n\nlet logoutTimer;\n\nconst calculateTimeToLogout = expirationTime => {\n  const currentTime = new Date().getTime();\n  const calculatedExpirationTime = new Date(expirationTime).getTime();\n\n  return calculatedExpirationTime - currentTime;\n};\n\nexport const runLogoutTimer = (dispatch, expirationTime) => {\n  const remainingTime = calculateTimeToLogout(expirationTime);\n\n  logoutTimer = setTimeout(() => dispatch(logout()), remainingTime);\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n\n  if (logoutTimer) {\n    clearTimeout(logoutTimer);\n  }\n\n  return {\n    type: types.ON_LOGOUT_REQUEST,\n  };\n};\n\nexport const login = idToken => {\n  const idTokenInfo = localStorage.getItem('token');\n\n  if (!idTokenInfo) {\n    localStorage.setItem('token', idToken);\n  }\n\n  return {\n    type: types.ON_LOGIN_SUCCESS,\n  };\n};\n\nexport default {\n  login,\n  logout,\n  runLogoutTimer\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ON_LOGIN_SUCCESS = 'ON_LOGIN_SUCCESS';\nconst ON_LOGOUT_REQUEST = 'ON_LOGOUT_REQUEST';\n\nexport default {\n  ON_LOGIN_SUCCESS,\n  ON_LOGOUT_REQUEST\n};\n","import { combineReducers } from 'redux';\nimport types from './types';\n\nconst initialState = {\n  isLoggedIn: false,\n  idToken: '',\n  expiresIn: ''\n};\n\nconst userAuth = (state = initialState, action) => {\n  switch (action.type) {\n    case types.ON_LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        idToken: action.idToken,\n        expiresIn: action.expiresIn\n      };\n    case types.ON_LOGOUT_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: false,\n        idToken: '',\n        expiresIn: ''\n      };\n    default:\n      return state;\n  }\n};\n\nconst userAuthReducer = combineReducers({\n  userAuth\n});\n\nexport default userAuthReducer;\n","import { login, logout, runLogoutTimer } from './actions';\n\nconst onLoginSuccess = login;\nconst onLogoutRequest = logout;\n\nexport default {\n  onLoginSuccess,\n  onLogoutRequest,\n  runLogoutTimer\n};\n","import userAuthReducer from './reducers';\n\nexport { default as userAuthOperations } from './operations';\nexport { default as userAuthTypes } from './types';\n\nexport default userAuthReducer;\n","const SET_INGREDIENTS = 'SET_INGREDIENTS';\nconst SET_TOTAL_PRICE = 'SET_TOTAL_PRICE';\nconst CAN_PURCHASE = 'CAN_PURCHASE';\nconst IS_PURCHASING = 'IS_PURCHASING';\nconst UPDATE_PURCHASE = 'UPDATE_PURCHASE';\nconst ERROR = 'ERROR';\n\nexport default {\n  SET_INGREDIENTS,\n  SET_TOTAL_PRICE,\n  CAN_PURCHASE,\n  IS_PURCHASING,\n  UPDATE_PURCHASE,\n  ERROR\n};\n","import { combineReducers } from 'redux';\nimport types from './types';\n\nexport const initialState = {\n  ingredients: {},\n  totalPrice: 0,\n  canPurchase: false,\n  isPurchasing: false,\n  error: false,\n};\n\nconst burger = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_INGREDIENTS:\n      return { ...state, ingredients: action.ingredients };\n    case types.SET_TOTAL_PRICE:\n      return { ...state, totalPrice: action.totalPrice };\n    case types.UPDATE_PURCHASE:\n      return { ...state, canPurchase: Object.values(action.payload).some(value => value) };\n    case types.CAN_PURCHASE:\n      return { ...state, canPurchase: true };\n    case types.IS_PURCHASING:\n      return { ...state, isPurchasing: true };\n    case types.ERROR:\n      return { error: true }; default:\n      return state;\n  }\n};\n\nconst burgerReducer = combineReducers({ burger });\n\nexport default burgerReducer;\n","import actions from './actions';\n\nconst setIngredients = actions.setIngredients;\nconst setTotalPrice = actions.setTotalPrice;\nconst updatePurchase = actions.updatePurchase;\nconst isPurchasing = actions.isPurchasing;\n\nexport default {\n  setIngredients,\n  setTotalPrice,\n  updatePurchase,\n  isPurchasing\n};\n","import types from './types';\n\nconst setIngredients = ingredients => ({\n  type: types.SET_INGREDIENTS,\n  ingredients\n});\n\nconst setTotalPrice = totalPrice => ({\n  type: types.SET_TOTAL_PRICE,\n  totalPrice\n});\n\nconst updatePurchase = payload => ({\n  type: types.UPDATE_PURCHASE,\n  payload\n});\n\nconst isPurchasing = () => ({\n  type: types.IS_PURCHASING\n});\n\nexport default {\n  setIngredients,\n  setTotalPrice,\n  updatePurchase,\n  isPurchasing\n};\n","import burgerReducer from './reducers';\n\nexport { default as burgerTypes } from './types';\nexport { default as burgerOperations } from './operations';\n\nexport default burgerReducer;\n","export const FIREBASE_SIGN_IN_WITH_PASSWORD = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_apiKey_firebase}`;\nexport const FIREBASE_SIGN_UP = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_apiKey_firebase}`;\nexport const FIREBASE_UPDATE_PASSWORD = `https://identitytoolkit.googleapis.com/v1/accounts:update?key=${process.env.REACT_APP_apiKey_firebase}`;\n","import React, { useRef, useState } from 'react';\nimport {\n  Button, Col, Container, Form, Row, Spinner,\n} from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { userAuthOperations } from '../../store/ducks/user';\nimport { FIREBASE_SIGN_IN_WITH_PASSWORD, FIREBASE_SIGN_UP } from '../../utils/endpoints';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const emailFieldRef = useRef();\n  const passwordFieldRef = useRef();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    const url = isLogin ? FIREBASE_SIGN_IN_WITH_PASSWORD : FIREBASE_SIGN_UP;\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: emailFieldRef.current.value,\n        password: passwordFieldRef.current.value,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        setIsLoading(false);\n\n        return response.json();\n      } else {\n        setIsLoading(false);\n\n        return response.json().then(() => {\n          throw new Error('Authentication failed');\n        });\n      }\n    }).then(data => {\n      const { idToken, expiresIn } = data;\n\n      const timeToLogout = new Date(new Date().getTime() + (+expiresIn * 1000));\n\n      dispatch(userAuthOperations.onLoginSuccess(idToken));\n      userAuthOperations.runLogoutTimer(dispatch, timeToLogout);\n      navigate('/');\n    }).catch(error => console.error(error.message));\n  };\n\n  const onClickSwitchAuthMethod = () => setIsLogin(prevState => !prevState);\n\n  const AuthMethodButtonText = () => (\n    <>\n      <Button className=\"w-100 mb-2\" variant=\"primary\" type=\"submit\">\n        {isLoading && (\n        <Spinner\n          className=\"mr-2\"\n          as=\"span\"\n          animation=\"border\"\n          size=\"sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n\t\t\t\t)}\n        {isLogin\n\t\t\t\t\t? 'Login'\n\t\t\t\t\t: 'Create Account'}\n      </Button>\n      <Form.Text style={{ display: 'inline-block' }}>\n        {isLogin\n\t\t\t\t\t? 'Don\\'t have an account ? '\n\t\t\t\t\t: 'Already have an account ? '}\n      </Form.Text>\n      <Button\n        variant=\"link\"\n        className=\"text-dark p-0 pl-1 btn-out\"\n        onClick={onClickSwitchAuthMethod}\n        >\n        <small className=\"text-danger\">\n          {isLogin\n\t\t\t\t\t\t? 'Register now.'\n\t\t\t\t\t\t: 'Log in'}\n        </small>\n      </Button>\n    </>\n  );\n\n  return (\n    <Container className=\"pt-5\">\n      <Row className=\"justify-content-center\">\n        <Col xs lg=\"6\">\n          <h1 className=\"h3 text-center mb-3\">{isLogin ? 'Sign in' : 'Sign up'}</h1>\n          <Form onSubmit={onSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                required\n                ref={emailFieldRef}\n                type=\"email\"\n                placeholder=\"Enter email\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                ref={passwordFieldRef}\n                type=\"password\"\n                placeholder=\"Password\"\n                // pattern=\"^(?=.*[a-z])(?=.*[A-Z]).{8,}$\"\n              />\n\n            </Form.Group>\n            <AuthMethodButtonText />\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://react-burger-701-default-rtdb.firebaseio.com/',\n});\n\nexport default instance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredient.module.css';\n\nfunction BurgerIngredient({ type }) {\n  let ingredient = null;\n\n  switch (type) {\n    case 'bread-top':\n      ingredient = (\n        <div className={classes.BreadTop}>\n          <div className={classes.Seeds1} />\n          <div className={classes.Seeds2} />\n        </div>\n      );\n\n      break;\n    case 'bread-bottom':\n      ingredient = <div className={classes.BreadBottom} />;\n      break;\n    case 'meat':\n      ingredient = <div className={classes.Meat} />;\n      break;\n    case 'cheese':\n      ingredient = <div className={classes.Cheese} />;\n      break;\n    case 'salad':\n      ingredient = <div className={classes.Salad} />;\n      break;\n    case 'onion':\n      ingredient = <div className={classes.Onion} />;\n      break;\n    case 'bacon':\n      ingredient = <div className={classes.Bacon} />;\n      break;\n    default:\n      ingredient = null;\n  }\n\n  return ingredient;\n}\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default BurgerIngredient;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nimport classes from './Burger.module.css';\nimport classesGlobal from '../../App.module.css';\n\nfunction Burger({ ingredients, hasError }) {\n  let ingredientsAll = Object.keys(ingredients)\n    .map(ingredientsKey => [...Array(Math.max(0, ingredients[ingredientsKey]))]\n      .map((_, i) => <BurgerIngredient key={ingredientsKey + i} type={ingredientsKey} />))\n    \t.reduce((arr, curr) => arr.concat(curr), []);\n\n  if (ingredientsAll.length === 0) {\n    ingredientsAll = (\n      <p className={classesGlobal.TextCenter} style={{ fontWeight: '600' }}>\n        {!hasError ? 'Add ingredients, please' : 'Sorry, something went wrong'}\n      </p>\n    );\n  }\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {ingredientsAll}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n}\n\nexport default Burger;\n\nBurger.propTypes = {\n  ingredients: PropTypes.object.isRequired,\n  hasError: PropTypes.bool\n};\n\nBurger.defaultProps = {\n  hasError: false\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './BurgerControl.module.css';\n\nconst BurgerControl = ({\n  label, added, removed, disabledNote\n}) => (\n  <div className={classes.BuildControl}>\n    <div className={classes.Label}>{label}</div>\n    <button type=\"button\" className={classes.More} onClick={added}>\n      &#43;\n    </button>\n\n    <button\n      type=\"button\"\n      className={classes.Less}\n      disabled={disabledNote}\n      onClick={removed}\n    >\n      &minus;\n    </button>\n  </div>\n);\n\nexport default BurgerControl;\n\nBurgerControl.propTypes = {\n  removed: PropTypes.func.isRequired,\n  added: PropTypes.func.isRequired,\n  disabledNote: PropTypes.bool,\n  label: PropTypes.string,\n};\n\nBurgerControl.defaultProps = {\n  label: 'Total Price: ',\n  disabledNote: false\n};\n","export default [\n  { label: 'Salad', type: 'salad' },\n  { label: 'Meat', type: 'meat' },\n  { label: 'Cheese', type: 'cheese' },\n  { label: 'Onion', type: 'onion' },\n  { label: 'Bacon', type: 'bacon' },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BurgerControl from './BurgerControl/BurgerControl';\nimport classes from './BurgerControl/BurgerControl.module.css';\nimport classesGlobal from '../../../App.module.css';\nimport CONTROLS from '../../../utils/controls';\n\nconst BurgerControls = ({\n  ingredientAdded, ingredientRemoved, disabled, totalPrice, canPurchase, onClickOrder\n}) => (\n  <div className={classesGlobal.TextCenter}>\n    <p className={classesGlobal.TextCenter}>\n      Total price:\n      {' '}\n      <strong>{totalPrice}</strong>\n    </p>\n    {CONTROLS.map(control => (\n      <BurgerControl\n        added={() => ingredientAdded(control.type)}\n        removed={() => ingredientRemoved(control.type)}\n        key={control.label}\n        label={control.label}\n        type={control.type}\n        disabledNote={disabled[control.type]}\n      />\n\t\t))}\n    <button\n      type=\"button\"\n      className={classes.OrderButton} disabled={canPurchase}\n      onClick={onClickOrder}\n    >\n      Order burger\n    </button>\n  </div>\n);\n\nexport default BurgerControls;\n\nBurgerControls.propTypes = {\n  totalPrice: PropTypes.number.isRequired,\n  canPurchase: PropTypes.bool.isRequired,\n  onClickOrder: PropTypes.func.isRequired,\n  ingredientAdded: PropTypes.func.isRequired,\n  ingredientRemoved: PropTypes.func.isRequired,\n  disabled: PropTypes.any.isRequired\n};\n","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nfunction backdrop({ clicked, children, show }) {\n  return show\n    ? (\n      <button type=\"button\" className={classes.Backdrop} onClick={clicked}>\n        {children}\n      </button>\n    )\n    : null;\n}\n\nexport default backdrop;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nfunction Modal({ show, modalClose, children }) {\n  return (\n    <>\n      <Backdrop clicked={modalClose} show={show} />\n      <div\n        className={classes.Modal}\n        style={{ transform: show ? 'translateY(0)' : 'translateY(-1000px)' }}\n        >\n        {children}\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(Modal);\n\nModal.propTypes = {\n  show: PropTypes.bool,\n  modalClose: PropTypes.func.isRequired,\n  children: PropTypes.node\n};\n\nModal.defaultProps = {\n  show: null,\n  children: null\n};\n","import React from 'react';\nimport classes from './Button.module.css';\n\nfunction button({ children, clicked, btnType }) {\n  return (\n    <button type=\"button\" className={[classes.Button, classes[btnType]].join(' ')} onClick={clicked}>\n      {children}\n    </button>\n  );\n}\n\nexport default button;\n","import React from 'react';\nimport Button from '../../UI/Button/Button';\n\nfunction orderSummary({\n  ingredients, purchaseCancelled, purchaseProceed, price\n}) {\n  const ingredientsItems = Object.keys(ingredients).map(ingredient => (\n    <li key={ingredient}>\n      {ingredient}\n      :\n      {ingredients[ingredient]}\n    </li>\n  ));\n\n  return (\n    <>\n      <h3>Your order: </h3>\n      <ul style={{ listStyleType: 'none', paddingLeft: '0' }}>\n        {ingredientsItems}\n      </ul>\n      <p>\n        <strong>\n          Total price:\n          {price}\n        </strong>\n      </p>\n      <Button btnType=\"Danger\" clicked={purchaseCancelled}>\n        CANCEL\n      </Button>\n      <Button btnType=\"Success\" clicked={purchaseProceed}>\n        CONTINUE\n      </Button>\n    </>\n  );\n}\n\nexport default orderSummary;\n","import React from 'react';\nimport classes from './Spinner.module.css';\n\nfunction spinner() {\n  return <div className={classes.Loader} />;\n}\n\nexport default spinner;\n","import React, { Component } from 'react';\nimport Modal from '../../components/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => class extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.requestInterceptor = axios.interceptors.request.use(request => {\n      this.setState({ error: null });\n\n      return request;\n    });\n    this.responseInterceptor = axios.interceptors.response.use(\n      response => response,\n      error => {\n        this.setState({ error });\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    \taxios.interceptors.request.eject(this.requestInterceptor);\n    \taxios.interceptors.response.eject(this.responseInterceptor);\n  }\n\n  errorConfirmedHandler = () => {\n    \tthis.setState({ error: null });\n  };\n\n  render() {\n    \treturn (\n      <>\n        <Modal modalClose={this.errorConfirmedHandler} show={this.state.error}>\n          {this.state.error ? this.state.error.message : null}\n        </Modal>\n        <WrappedComponent {...this.props} />\n      </>\n    \t);\n  }\n};\n\nexport default withErrorHandler;\n","export default {\n  meat: 2,\n  salad: 0.5,\n  cheese: 1,\n  onion: 0.4,\n  bacon: 0.9\n};\n","import React, { useState, useEffect, } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport axios from '../../axios-orders';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport Modal from '../../components/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/Spinner/Spinner';\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { burgerOperations } from '../../store/ducks/burger';\nimport INGREDIENT_PRICES from '../../utils/ingredientPrices';\n\nconst BurgerBuilder = () => {\n  const dispatch = useDispatch();\n  const ingredients = useSelector(state => state.burgerState.burger.ingredients);\n  const totalPrice = useSelector(state => state.burgerState.burger.totalPrice);\n  const canPurchase = useSelector(state => state.burgerState.burger.canPurchase);\n\n  const [purchasing, setPurchasing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setLoading(true);\n\n    axios.get('/ingredients.json')\n      .then(response => {\n        dispatch(burgerOperations.setIngredients(response.data));\n        setLoading(false);\n      })\n      .catch(errorData => { setError(true); });\n  }, []);\n\n  const ingredientAdd = type => {\n    const countOld = ingredients[type];\n    const countUpdated = countOld + 1;\n    const ingredientsUpdated = { ...ingredients, };\n\n    ingredientsUpdated[type] = countUpdated;\n\n    const ingredientPrice = INGREDIENT_PRICES[type];\n    const newPrice = parseFloat(ingredientPrice + totalPrice).toFixed(2);\n\n    dispatch(burgerOperations.setIngredients(ingredientsUpdated));\n    dispatch(burgerOperations.setTotalPrice(Number(newPrice)));\n    dispatch(burgerOperations.updatePurchase(ingredientsUpdated));\n  };\n\n  const ingredientRemove = type => {\n    const countOld = ingredients[type];\n    const countUpdated = countOld - 1;\n    const ingredientPrice = INGREDIENT_PRICES[type];\n    const newPrice = parseFloat((totalPrice - ingredientPrice).toFixed(2));\n\n    ingredients[type] = countUpdated;\n\n    dispatch(burgerOperations.setIngredients(ingredients));\n    dispatch(burgerOperations.setTotalPrice(newPrice));\n    dispatch(burgerOperations.updatePurchase(ingredients));\n  };\n\n  const purchase = () => setPurchasing(true);\n\n  const purchaseCancel = () => setPurchasing(false);\n\n  const purchaseContinue = () => {\n    const queryParams = [];\n\n    for (const i in ingredients) {\n      queryParams.push(`${encodeURIComponent(i)}=${encodeURIComponent(ingredients[i])}`);\n      queryParams.push(`price=${totalPrice}`);\n\n      const queryString = queryParams.join('&');\n\n      navigate({ pathname: '/checkout', search: `?${queryString}` });\n    }\n  };\n\n  const disabledNote = { ...ingredients };\n\n  for (const key in disabledNote) {\n    disabledNote[key] = disabledNote[key] <= 0;\n  }\n\n  return (\n    <>\n      <Modal modalClose={purchaseCancel} show={purchasing}>\n        <OrderSummary\n          ingredients={ingredients}\n          purchaseCancelled={purchaseCancel}\n          purchaseProceed={purchaseContinue}\n          price={totalPrice}\n        />\n      </Modal>\n      {ingredients && !loading && <Burger ingredients={ingredients} hasError={error} />}\n      {loading && <Spinner />}\n      {ingredients && (\n      <BurgerControls\n        ingredientAdded={ingredientAdd}\n        ingredientRemoved={ingredientRemove}\n        disabled={disabledNote}\n        totalPrice={totalPrice}\n        canPurchase={!canPurchase}\n        onClickOrder={purchase}\n      />\n      )}\n    </>\n  );\n};\n\nexport default WithErrorHandler(BurgerBuilder, axios);\n","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\n\nimport classes from './CheckoutSummary.module.css';\n\nfunction checkoutSummary({ ingredients, onCheckoutCancelled, onCheckoutSucceed }) {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>Checkout Summary</h1>\n      <Burger ingredients={ingredients} />\n    </div>\n  );\n}\n\nexport default checkoutSummary;\n","import { useState } from 'react';\n\nconst useForm = (initialValue = {}) => {\n  const [formData, setFormData] = useState(initialValue);\n\n  const inputChangeHandler = event => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return {\n    formData,\n    inputChangeHandler\n  };\n};\n\nexport default useForm;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\n\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/Spinner/Spinner';\nimport useForm from '../../../hooks/useForm';\n\nimport classes from './ContactData.module.css';\n\nfunction ContactData({ ingredients, price, onCheckoutCancelled }) {\n  const navigate = useNavigate();\n  const [isValidated, setIsValidated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { formData, inputChangeHandler } = useForm({\n    name: '',\n    email: '',\n    zipCode: '',\n    country: '',\n    street: '',\n  });\n\n  const handleSubmit = event => {\n    const form = event.target;\n    const dateFormatted = new Date().toLocaleString('pl-PL', {\n      year: 'numeric',\n      month: 'numeric',\n      day: '2-digit',\n      hour: 'numeric',\n      minute: 'numeric',\n      hourCycle: 'h23',\n    });\n\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      setLoading(true);\n\n      const order = {\n        orderDate: dateFormatted,\n        ingredients: ingredients,\n        price: price,\n        customer: { formData },\n      };\n\n      axios\n        .post('/orders.json', order)\n        .then(response => {\n          setLoading(false);\n          setIsValidated(false);\n          navigate('/');\n        })\n        .catch(error => {\n          setLoading(false);\n          console.error(error);\n        });\n    }\n\n    setIsValidated(true);\n  };\n\n  const form = !loading\n    ? (\n      <Form\n        className={classes.ContactData}\n        noValidate\n        validated={isValidated}\n        onSubmit={event => handleSubmit(event)}\n        >\n        <Form.Group controlId=\"email\">\n          <Form.Control\n            name=\"email\"\n            onChange={inputChangeHandler}\n            placeholder=\"Enter email\"\n            required\n            type=\"email\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"name\">\n          <Form.Control\n            name=\"name\"\n            onChange={inputChangeHandler}\n            placeholder=\"Your Name\"\n            required\n            type=\"text\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"street\">\n          <Form.Control\n            name=\"street\"\n            onChange={inputChangeHandler}\n            placeholder=\"Street\"\n            required\n            type=\"text\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Control\n            name=\"country\"\n            onChange={inputChangeHandler}\n            placeholder=\"country\"\n            required\n            type=\"text\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"zipCode\">\n          <Form.Control\n            name=\"zipCode\"\n            type=\"text\"\n            placeholder=\"Zip Code\"\n            required\n            onChange={inputChangeHandler}\n          />\n        </Form.Group>\n        <div className=\"d-lg-flex\">\n          <Button\n            className=\"mr-lg-4 mb-2 mb-lg-0 w-100\"\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={onCheckoutCancelled}\n            size=\"lg\"\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-100\" type=\"submit\" variant=\"primary\" size=\"lg\">\n            Order\n          </Button>\n        </div>\n      </Form>\n    )\n    : <Spinner />;\n\n  return <div className={classes.ContactData}>{form}</div>;\n}\n\nexport default ContactData;\n\nContactData.propTypes = {\n  price: PropTypes.number.isRequired,\n  ingredients: PropTypes.object.isRequired,\n  onCheckoutCancelled: PropTypes.func.isRequired\n};\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nfunction Checkout() {\n  const [ingredients, setIngredients] = useState({});\n  const [price, setPrice] = useState(0);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const query = new URLSearchParams(location.search);\n    const ingredientElements = {};\n\n    for (const param of query.entries()) {\n      if (param[0] === 'price') setPrice(price + param[1]);\n      else ingredientElements[param[0]] = +param[1];\n    }\n\n    setIngredients(ingredientElements);\n    // eslint-disable-next-line\n  }, []);\n\n  function onCheckoutCancelledHandler() {\n    navigate(-1);\n  }\n\n  function onCheckoutSucceedHandler() {\n    navigate('/checkout/contact-data', { replace: true });\n  }\n\n  return (\n    <div>\n      <CheckoutSummary ingredients={ingredients} />\n      <ContactData\n        ingredients={ingredients}\n        price={parseFloat(price)}\n        onCheckoutCancelled={onCheckoutCancelledHandler}\n      />\n    </div>\n  );\n}\n\nexport default Checkout;\n\nCheckout.defaultProps = {\n  price: 0.00\n};\n","import React, { useRef } from 'react';\nimport {\n  Button, Col, Container, Form, Row\n} from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { FIREBASE_UPDATE_PASSWORD } from '../../utils/endpoints';\n\nconst UserProfilePage = () => {\n  const idToken = useSelector(state => state.userAuthState.userAuth.idToken);\n  const passwordFieldRef = useRef();\n  const navigate = useNavigate();\n\n  let enteredNewPassword = passwordFieldRef.current;\n\n  const onSubmit = event => {\n    event.preventDefault();\n    enteredNewPassword = passwordFieldRef?.current?.value;\n\n    fetch(FIREBASE_UPDATE_PASSWORD, {\n      method: 'POST',\n      body: JSON.stringify({\n        idToken,\n        password: enteredNewPassword,\n        returnSecureToken: false\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(response => {\n      navigate('/', { replace: true });\n    });\n  };\n\n  return (\n    <Container className=\"pt-5\">\n      <Row className=\"justify-content-center\">\n        <Col xs lg=\"6\">\n          <h1>User Profile</h1>\n          <Form onSubmit={onSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>New Password</Form.Label>\n              <Form.Control\n                ref={passwordFieldRef}\n                required\n                type=\"password\"\n                placeholder=\"Password\"\n                pattern=\"^(?=.*[a-z])(?=.*[A-Z]).{8,}$\"\n                aria-describedby=\"passwordHint\"\n              />\n              <Form.Text id=\"passwordHint\" muted>\n                Your password must greater or equal 8 characters long, contain one lowercase and one uppercase character\n              </Form.Text>\n              <Form.Control.Feedback as=\"small\" type=\"invalid\">\n                At least one lowercase letter\n                {' '}\n                <br />\n                The total length should be greater than or equal to 8\n                {' '}\n                <br />\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Button className=\"w-100\" variant=\"primary\" type=\"submit\">\n              Change password\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default UserProfilePage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './NavigationItem.module.css';\n\nfunction navigationItem({ link, children, end }) {\n  return (\n    <li className={classes.NavigationItem}>\n      <NavLink className={({ isActive }) => (isActive ? `${classes.active}` : '')} end={end} to={link}>\n        {children}\n      </NavLink>\n    </li>\n  );\n}\n\nexport default navigationItem;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userAuthOperations } from '../../../store/ducks/user';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nimport classes from './NavigationItems.module.css';\n\nconst NavigationItems = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.userAuthState.userAuth.isLoggedIn);\n\n  const onLogout = () => dispatch(userAuthOperations.onLogoutRequest());\n\n  return (\n    <ul className={classes.NavigationItems}>\n      <NavigationItem link=\"/\">BurgerBuilder</NavigationItem>\n      {isLoggedIn && (\n      <>\n        <NavigationItem link=\"/orders/\">Orders</NavigationItem>\n        <NavigationItem link=\"/userProfile/\">UserProfile</NavigationItem>\n        <button type=\"button\" onClick={onLogout}>Log out</button>\n      </>\n\t\t\t)}\n      {!isLoggedIn && <NavigationItem link=\"/login/\">Log in</NavigationItem>}\n    </ul>\n  );\n};\n\nexport default NavigationItems;\n","import React from 'react';\nimport NavigationItems from './NavigationItems/NavigationItems';\n\nfunction Navigation() {\n  return (\n    <nav>\n      <NavigationItems />\n    </nav>\n  );\n}\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\nimport logoImg from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css';\n\nfunction logo({ openedSideDrawer }) {\n  return (\n    <div className={classes.Logo}>\n      <img\n        alt=\"logo burger\"\n        src={logoImg}\n        style={{\n\t\t\t\t\ttransform: openedSideDrawer ? 'rotateZ(-180deg)' : 'rotateZ(0deg)',\n\t\t\t\t}}\n      />\n    </div>\n  );\n}\n\nexport default logo;\n","import React from 'react';\nimport classes from './Header.module.css';\nimport Navigation from '../Navigation';\nimport Logo from '../../Logo/Logo';\n\nfunction toolbar({ clickedLogo, openedSideDrawer }) {\n  return (\n    <header className={classes.Header}>\n      <button type=\"button\" className={classes.ButtonToggler} onClick={clickedLogo}>\n        Menu\n      </button>\n      <div className={classes.Logo}>\n        <Logo openedSideDrawer={openedSideDrawer} />\n      </div>\n      <Navigation />\n    </header>\n  );\n}\n\nexport default toolbar;\n","import React from 'react';\nimport Navigation from '../Navigation';\nimport Logo from '../../Logo/Logo';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../Backdrop/Backdrop';\n\nfunction sideDrawer({ opened, closed }) {\n  return (\n    <>\n      <Backdrop clicked={closed} show={opened} />\n      <div className={`${classes.SideDrawer} ${opened ? classes.Open : classes.Close}`}>\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <Navigation />\n      </div>\n    </>\n  );\n}\n\nexport default sideDrawer;\n","import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport Header from '../../components/Navigation/Header/Header';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nconst Layout = ({ children }) => {\n  const [isVisibleSideDrawer, setIsVisibleSideDrawer] = useState(false);\n\n  const sideDrawerToggleHandler = () => {\n    setIsVisibleSideDrawer(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <Header clickedLogo={sideDrawerToggleHandler} openedSideDrawer={isVisibleSideDrawer} />\n      <SideDrawer closed={sideDrawerToggleHandler} opened={isVisibleSideDrawer} />\n      <main style={{ marginTop: '56px' }}>{children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.any.isRequired\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Badge, Button, Card } from 'react-bootstrap';\n\nfunction Order({\n  ingredients, price, orderDate\n}) {\n  const orderIngredients = [];\n\n  for (const ingredientName in ingredients) {\n    orderIngredients.push({\n      name: ingredientName,\n      amount: ingredients[ingredientName],\n    });\n  }\n\n  const orderIngredientsOutput = orderIngredients.map(ingredient => (\n    <Button\n      type=\"button\"\n      className=\"mr-2 mt-2 mt-md-0 d-block d-md-inline-block text-capitalize\"\n      variant=\"primary\"\n      key={ingredient.name}\n      >\n      {ingredient.name}\n      {' '}\n      <Badge variant=\"light\">{ingredient.amount}</Badge>\n      <span className=\"sr-only\">\n        {ingredient.name}\n        {' '}\n        amount:\n        {ingredient.amount}\n      </span>\n    </Button>\n  ));\n\n  return (\n    <Card className=\"mt-3\">\n      <Card.Header className=\"text-lg-right\">\n        <strong>Order date:</strong>\n        {' '}\n        {orderDate}\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>\n          Ingredients:\n          {orderIngredientsOutput}\n        </Card.Title>\n        <Card.Text>\n          Price:\n          {price}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Order;\n\nOrder.propTypes = {\n  ingredients: PropTypes.object.isRequired,\n  price: PropTypes.string.isRequired,\n  orderDate: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport axios from '../../axios-orders';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport Order from '../../components/Order/Order';\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nfunction Orders() {\n  const [loading, setLoading] = useState(false);\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    axios\n      .get('/orders.json')\n      .then(response => {\n        const fetchedOrders = [];\n\n        for (const key in response.data) {\n          fetchedOrders.push({\n            ...response.data[key],\n            id: key\n          });\n        }\n\n        setLoading(false);\n        setOrders(fetchedOrders);\n      })\n      .catch(error => {\n        setLoading(false);\n        console.error(error);\n      });\n  }, []);\n\n  const order = !loading\n    ? orders.map(orderItem => (\n      <Order\n        ingredients={orderItem.ingredients} key={orderItem.id}\n        orderDate={orderItem.orderDate} price={+orderItem.price}\n      />\n    ))\n    : <Spinner />;\n\n  return <Container className=\"mt-4\">{order}</Container>;\n}\n\nexport default WithErrorHandler(Orders, axios);\n","import './App.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate, Routes, Route } from 'react-router-dom';\nimport React from 'react';\nimport LoginPage from './containers/LoginPage/LoginPage';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport UserProfilePage from './containers/UserProfilePage/UserProfilePage';\nimport Layout from './hoc/Layout/Layout';\nimport Orders from './containers/Orders/Orders';\nimport { userAuthOperations } from './store/ducks/user';\n\nfunction App() {\n  const isLoggedIn = useSelector(state => state.userAuthState.userAuth.isLoggedIn);\n\n  const tokenInfo = localStorage.getItem('token');\n  const dispatch = useDispatch();\n\n  if (tokenInfo) {\n    dispatch(userAuthOperations.onLoginSuccess());\n  }\n\n  return (\n    <Layout>\n      <Routes>\n        {!isLoggedIn && (\n        <>\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n\n        </>\n\t\t\t\t)}\n        {isLoggedIn && (\n        <>\n          <Route path=\"/userProfile\" element={<UserProfilePage />} />\n          <Route path=\"/orders\" element={<Orders />} />\n          <Route path=\"/checkout\" element={<Checkout />} />\n          <Route path=\"/\" element={<BurgerBuilder />} />\n        </>\n\t\t\t\t)}\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './store';\n\nimport App from './App';\n\nimport './custom.scss';\nimport './index.css';\n\nconst store = configureStore(window.REDUX_INITIAL_DATA);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { combineReducers, createStore } from 'redux';\nimport * as reducers from './ducks';\n\nexport default function configureStore(initialState = {}) {\n  const rootReducer = combineReducers(reducers);\n\n  return createStore(\n    rootReducer,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__\n\t\t&& window.__REDUX_DEVTOOLS_EXTENSION__(),\n  );\n}\n"],"sourceRoot":""}